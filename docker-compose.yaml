version: '3.8'
services:
  gateway-service:
    env_file:
      - ./back-end/gateway-service/.env.docker
    build:
      context: back-end/gateway-service/
      dockerfile: Dockerfile.dev
    volumes:
      - ./back-end/gateway-service/:/app
    ports:
      - 4001:4001
      - 2347:2345
    depends_on:
      - redis
  catalog-service:
    env_file:
      - ./back-end/catalog-service/.env.docker
    build:
      context: back-end/catalog-service/
      dockerfile: Dockerfile.dev
    volumes:
      - ./back-end/catalog-service/:/app
    ports:
      - 4002:4002
      - 2346:2345
  authentication-service:
    env_file:
      - ./back-end/authentication-service/.env.docker
    build:
      context: back-end/authentication-service/
      dockerfile: Dockerfile.dev
    volumes:
      - ./back-end/authentication-service/:/app
    ports:
      - 4003:4003
      - 2348:2345
    depends_on:
      - mongodb
      - nats
  analytics-service:
    env_file:
    - ./back-end/analytics-service/.env.docker
    build:
      context: back-end/analytics-service/
      dockerfile: Dockerfile.dev
    volumes:
      - ./back-end/analytics-service/:/app:rw,delegated
    ports:
      - 4004:4004
      - 2349:2345
    depends_on:
      - nats
      - postgres
  customer-service:
    env_file:
    - ./back-end/customer-service/.env.docker
    build:
      context: back-end/customer-service/
      dockerfile: Dockerfile.dev
    volumes:
      - ./back-end/customer-service/:/app:rw,delegated
    ports:
      - 4006:4006
      - 2350:2345
    depends_on:
      - nats
      - postgres
  cart-service:
    env_file:
    - ./back-end/cart-service/.env.docker
    build:
      context: back-end/cart-service/
      dockerfile: Dockerfile.dev
    volumes:
      - ./back-end/cart-service/:/app:rw,delegated
    ports:
      - 4007:4007
      - 2351:2345
    depends_on:
      - nats
      - postgres
  notification-service:
    env_file:
    - ./back-end/notification-service/.env.docker
    build:
      context: back-end/notification-service/
      dockerfile: Dockerfile.dev
    environment:
      - ./back-end/notification-service/:/app
    volumes:
      - ./back-end/notification-service/:/app:rw,delegated
    ports:
      - 4005:4005
    depends_on:
      - nats
      - postgres
  nats:
    image: nats:latest
    entrypoint: ["/nats-server", "-js"]
    ports:
    - "4222:4222"
    - "8222:8222"
    - "6222:6222"
    restart: always
    tty: true
  mongodb:
    container_name: marketplace-mongodb
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodbdata:/marketplace/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: db    
  postgres:
    container_name: marketplace_postgres_container
    image: postgres
    environment:
      POSTGRES_DB: catalog
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/marketplace/postgres
    ports:
      - "5437:5432"
    restart: unless-stopped
  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
    - "4333:8080"
    environment:
      SWAGGER_JSON: /tmp/open-api.yaml
    volumes:
      - ./back-end:/tmp:rw,delegated
    restart: always
  swagger-editor:
    image: swaggerapi/swagger-editor
    ports:
    - "4444:8080"
    environment:
      SWAGGER_FILE: /tmp/open-api.yaml
    volumes:
      - ./back-end:/tmp:rw,delegated
    restart: always
  redis:
    container_name: marketplace_redis
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis-data:/marketplace/data
    command: redis-server --appendonly yes
volumes:
  postgres:
  redis-data:
  mongodbdata: